local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "GG hub",
   Icon = nil, -- Ícone removido (ID inválido)
   LoadingTitle = "GGhub loading...",
   LoadingSubtitle = "",
   Theme = "Dark",
   ToggleUIKeybind = Enum.KeyCode.RightControl,
   DisableRayfieldPrompts = true,
   DisableBuildWarnings = true,
   ConfigurationSaving = {
      Enabled = true,
      FolderName = "GG Hub",
      FileName = "GGhub_SaberSimulator"
   },
   Discord = {
      Enabled = false,
      Invite = "",
      RememberJoins = true
   },
   KeySystem = false
})

local Main = Window:CreateTab("Main", 4483362458)
local Farm = Window:CreateTab("Other", 4483362458)

-- Auto Swing
local autoSwing = Main:CreateToggle({
   Name = "Auto Swing",
   CurrentValue = false,
   Callback = function(Value)
      getgenv().autoSwing = Value
      if Value then
         spawn(function()
            while getgenv().autoSwing do
               task.wait(0.1)
               pcall(function()
                  game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("SwingSaber"):FireServer()
               end)
            end
         end)
      end
   end
})

-- Auto Sell
local autoSell = Main:CreateToggle({
   Name = "Auto Sell",
   CurrentValue = false,
   Callback = function(Value)
      getgenv().autoSell = Value
      if Value then
         spawn(function()
            while getgenv().autoSell do
               task.wait(0.1)
               pcall(function()
                  game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("SellStrength"):FireServer()
               end)
            end
         end)
      end
   end
})

-- Auto Daily Rewards (Corrigido)
local autoReward = Main:CreateToggle({
   Name = "Auto Collect DailyRewards",
   CurrentValue = false,
   Callback = function(Value)
      getgenv().autoReward = Value
      if Value then
         Rayfield:Notify({
            Title = "Enabled!",
            Content = "Auto DailyRewards enabled",
            Duration = 3,
            Image = 4483362458,
         })
         
         spawn(function()
            while getgenv().autoReward do
               if not getgenv().autoReward then break end -- Verificação extra
               
               task.wait(50) -- 50 segundos
               
               if not getgenv().autoReward then break end -- Verificação antes de executar
               
               -- Verifica se os serviços existem antes de tentar usar
               local success, result = pcall(function()
                  local ReplicatedStorage = game:GetService("ReplicatedStorage")
                  local Events = ReplicatedStorage:FindFirstChild("Events")
                  
                  if Events then
                     local UIAction = Events:FindFirstChild("UIAction")
                     if UIAction then
                        -- Tenta coletar diferentes tipos de rewards
                        local rewardTypes = {
                           "ClaimDailyReward",
                           "ClaimDailyTimedReward"
                        }
                        
                        local rewardsClaimed = 0
                        for _, rewardType in pairs(rewardTypes) do
                           if not getgenv().autoReward then break end
                           
                           local rewardSuccess = pcall(function()
                              UIAction:FireServer(rewardType)
                           end)
                           
                           if rewardSuccess then
                              rewardsClaimed = rewardsClaimed + 1
                           end
                           task.wait(0.5)
                        end
                        
                        -- Notificação de sucesso apenas se coletou algum reward
                        if rewardsClaimed > 0 and getgenv().autoReward then
                           Rayfield:Notify({
                              Title = "DailyRewards Colleted!",
                              Content = "DailyRewards colleted",
                              Duration = 4,
                              Image = 4483362458,
                           })
                        end
                     end
                  end
               end)
               
               if not success then
                  print("Erro ao coletar rewards:", result)
               end
            end
         end)
      else
         Rayfield:Notify({
            Title = "Disabled!",
            Content = "Auto DailyRewards disabled",
            Duration = 3,
            Image = 4483362458,
         })
      end
   end
})

-- Kill Player
local ButtonKill = Farm:CreateButton({
   Name = "Matar Jogador",
   Callback = function()
      local player = game.Players.LocalPlayer
      if player and player.Character and player.Character:FindFirstChild("Humanoid") then
         player.Character.Humanoid.Health = 0
      end
   end
})

-- Jump Power Slider
local SliderJump = Farm:CreateSlider({
   Name = "Pulo (JumpPower)",
   Range = {0, 100},
   Increment = 1,
   Suffix = "",
   CurrentValue = 50,
   Callback = function(Value)
      local player = game.Players.LocalPlayer
      if player and player.Character and player.Character:FindFirstChild("Humanoid") then
         player.Character.Humanoid.JumpPower = Value
      end
   end
})

-- NPC Dropdown (Simplificado)
local DropdownNPC = Farm:CreateDropdown({
   Name = "Selecionar NPC",
   Options = {"Npc 1", "Npc 2", "Npc 3"},
   CurrentOption = "Npc 1",
   Callback = function(Option)
      print("NPC selecionado:", Option)
   end
})

-- Keybind Example
local KeybindExample = Farm:CreateKeybind({
   Name = "Atalho de Teclado",
   CurrentKeybind = "F",
   HoldToInteract = false,
   Callback = function(Key)
      print("Tecla pressionada:", tostring(Key))
   end
})

-- Creator Info
local ParagraphCreator = Farm:CreateParagraph({
   Title = "Creator",
   Content = "GG hub by DNzinGG"
})

Rayfield:LoadConfiguration()
